<!-- Web configuration for Azure App Service -->
<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <system.webServer>
    <!-- This section configures the server to handle all traffic through iisnode -->
    <handlers>
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>

    <!-- URL Rewriting Rules -->
    <rewrite>
      <rules>
        <!-- Don't interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server.js\/debug[\/]?" />
        </rule>

        <!-- Static content rule - don't rewrite paths that point to static content -->
        <rule name="StaticContent" patternSyntax="ECMAScript">
          <match url=".*" negate="false" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="false" />
          </conditions>
          <action type="None" />
        </rule>

        <!-- API routing rule -->
        <rule name="api" stopProcessing="false">
          <match url="^api/?(.*)" />
          <action type="Rewrite" url="server.js" />
        </rule>

        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}" />
        </rule>

        <!-- All other URLs are mapped to the Node.js application entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
          </conditions>
          <action type="Rewrite" url="server.js" />
        </rule>
      </rules>
    </rewrite>

    <!-- Other configuration settings -->
    <iisnode 
       nodeProcessCommandLine="node.exe" 
       watchedFiles="*.js;web.config;iisnode.yml;package.json;public\*"
       loggingEnabled="true"
       devErrorsEnabled="true" />

    <!-- Prevent IIS from handling the URLs directly -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin" />
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Add more MIME types as needed -->
    <staticContent>
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
    </staticContent>
  </system.webServer>
</configuration> 